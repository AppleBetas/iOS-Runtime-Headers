/*
* This header is generated by classdump-dyld 1.0
* on Sunday, February 5, 2017 at 4:20:34 PM Eastern Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/CoreServices/SpringBoard.app/SpringBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SpringBoard/SpringBoard-Structs.h>
#import <FrontBoard/FBSystemApp.h>
#import <libobjc.A.dylib/MCProfileConnectionObserver.h>
#import <SpringBoard/SBPowerDownControllerDelegate.h>
#import <SpringBoard/SBRestartManagerDelegate.h>
#import <SpringBoard/SBModalAlertPresentationCoordinatorDelegate.h>
#import <UIKit/UIApplicationDelegate.h>

@protocol OS_dispatch_source, OS_dispatch_queue, SBFLockOutStatusProvider;
@class UIWindow, SBUIController, NSMutableSet, NSMutableArray, NSSet, SBApplication, NSNumberFormatter, NSTimer, NSDate, NSObject, BBDataProviderConnection, SBCardItemsController, SBNCNotificationDispatcher, NSHashTable, SBUserSessionController, SBFUserAuthenticationController, SBAppStatusBarSettingsAssertion, SBSStatusBarStyleOverridesAssertion, NSString, SBBluetoothAccessoryBatteryMonitor, SBScreenshotManager, SBSynchronizeCloudCriticalDataOperation, SBRestartManager, SBModalAlertPresenter, SBModalAlertPresentationCoordinator, SBMainDisplayInterfaceOrientationAggregator, SBWidgetController, SBHomeHardwareButton, SBLockHardwareButton, SBAccountStoreManager, SBPowerDownController, SBCombinationHardwareButton, SBPressSequenceAWDLogger;

@interface SpringBoard : FBSystemApp <MCProfileConnectionObserver, SBPowerDownControllerDelegate, SBRestartManagerDelegate, SBModalAlertPresentationCoordinatorDelegate, UIApplicationDelegate> {

	SBUIController* _uiController;
	double _headsetButtonDownTime;
	IOHIDEventRef _headsetDownEvent;
	int _headsetClickCount;
	int _ringerSwitchState;
	unsigned _headsetButtonClickCount : 8;
	unsigned _menuButtonClickCount : 8;
	unsigned _screenWasDimOnMenuDown : 1;
	unsigned _screenshotWasTaken : 1;
	unsigned _dontLockOnNextLockUp : 1;
	unsigned _headsetDownDelayedActionPerformed : 1;
	unsigned _isSeekingInMedia : 1;
	unsigned _ignoringCurrentLockButtonPress : 1;
	int _mediaSeekDirection;
	unsigned _springBoardRequestsAccelerometerEvents;
	long long _activeInterfaceOrientation;
	int _lastRequestedStatusBarStyleOverrides;
	NSMutableSet* _activeInterfaceOrientationObservers;
	NSMutableArray* _activeInterfaceOrientationOverrideStack;
	BOOL _wantsOrientationEvents;
	int _notifyDontAnimateREOToken;
	int _notifyDontAllowMediaHUDToken;
	BOOL _expectsFaceContact;
	BOOL _expectsFaceContactInLandscape;
	BOOL _proximityEventsEnabled;
	BOOL _smartCoverClosed;
	BOOL _keybagRefetchTransactionIsActive;
	BOOL _menuButtonDown;
	NSSet* _restrictionDisabledApplications;
	SBApplication* _nowRecordingApp;
	SBApplication* _menuButtonInterceptApp;
	BOOL _menuButtonInterceptAppEnabledForever;
	NSMutableArray* _disableNowPlayingHUDAssertionBundleIds;
	NSMutableArray* _appsRegisteredForVolumeEvents;
	NSMutableArray* _appsRegisteredForLockButtonEvents;
	SBApplication* _lastLockButtonEventRecipient;
	NSNumberFormatter* _decimalFormatter;
	NSNumberFormatter* _percentFormatter;
	NSTimer* _midnightTimer;
	NSDate* _midnightFireDate;
	opaque_pthread_t* _backgroundMIGServerThread;
	opaque_pthread_t* _iconGenerationMIGServerThread;
	NSObject*<OS_dispatch_source> _memoryPressureSource;
	unsigned _memoryPressureStatus;
	NSMutableArray* _blocksAwaitingAvailableMemory;
	BBDataProviderConnection* _bulletinBoardConnection;
	NSObject*<OS_dispatch_queue> _bulletinBoardQueue;
	SBCardItemsController* _cardItemsController;
	SBNCNotificationDispatcher* _notificationDispatcher;
	CFBooleanRef _shouldDelaySleepForHeadsetClick;
	NSHashTable* _volumePressBandits;
	BOOL _didPlayLockSound;
	unsigned long long _volumeAndLockButtonPrecedence;
	SBUserSessionController* _userSessionController;
	id<SBFLockOutStatusProvider> _lockOutController;
	SBFUserAuthenticationController* _authenticationController;
	NSHashTable* _disableActiveOrientationChangeAssertions;
	BOOL _hasFinishedLaunching;
	SBAppStatusBarSettingsAssertion* _hideStatusBarAssertion;
	SBAppStatusBarSettingsAssertion* _showStatusBarAssertion;
	SBSStatusBarStyleOverridesAssertion* _recordingStatusBarStyleOverrideAssertion;
	BOOL _atHomescreen;
	NSObject*<OS_dispatch_queue> _volumePowerQueue;
	NSString* _logFile;
	SBBluetoothAccessoryBatteryMonitor* _bluetoothBatteryMonitor;
	SBScreenshotManager* _screenshotManager;
	SBSynchronizeCloudCriticalDataOperation* _synchronizeCloudCriticalDataOperation;
	SBRestartManager* _restartManager;
	GSEventRef _pendingDeviceOrientationChangeEventDuringStartupTransition;
	SBModalAlertPresenter* _systemModalAlertPresenter;
	SBModalAlertPresentationCoordinator* _modalAlertPresentationCoordinator;
	SBMainDisplayInterfaceOrientationAggregator* _orientationAggregator;
	BOOL _inUserTransition;
	BOOL _determiningBootTransition;
	BOOL _dontLockEver;
	unsigned long long _volumeUpAggdStartTime;
	unsigned long long _volumeDownAggdStartTime;
	BOOL _typingActive;
	BOOL _batterySaverModeActive;
	int _nowPlayingProcessPID;
	NSMutableArray* _nowLocatingApps;
	SBWidgetController* _widgetController;
	SBHomeHardwareButton* _homeHardwareButton;
	SBLockHardwareButton* _lockHardwareButton;
	SBAccountStoreManager* _accountStoreController;
	SBPowerDownController* _powerDownController;
	NSTimer* _daylightSavingsTimer;
	SBCombinationHardwareButton* _combinationHardwareButton;
	SBPressSequenceAWDLogger* _volumeIncrementSequenceLogger;
	SBPressSequenceAWDLogger* _volumeDecrementSequenceLogger;

}

@property (nonatomic,retain) NSMutableArray * nowLocatingApps;                                                       //@synthesize nowLocatingApps=_nowLocatingApps - In the implementation block
@property (nonatomic,retain) SBPowerDownController * powerDownController;                                            //@synthesize powerDownController=_powerDownController - In the implementation block
@property (nonatomic,retain) NSTimer * daylightSavingsTimer;                                                         //@synthesize daylightSavingsTimer=_daylightSavingsTimer - In the implementation block
@property (assign,nonatomic) int nowPlayingProcessPID;                                                               //@synthesize nowPlayingProcessPID=_nowPlayingProcessPID - In the implementation block
@property (assign,getter=isBatterySaverModeActive,nonatomic) BOOL batterySaverModeActive;                            //@synthesize batterySaverModeActive=_batterySaverModeActive - In the implementation block
@property (nonatomic,readonly) SBCombinationHardwareButton * combinationHardwareButton;                              //@synthesize combinationHardwareButton=_combinationHardwareButton - In the implementation block
@property (nonatomic,readonly) SBPressSequenceAWDLogger * volumeIncrementSequenceLogger;                             //@synthesize volumeIncrementSequenceLogger=_volumeIncrementSequenceLogger - In the implementation block
@property (nonatomic,readonly) SBPressSequenceAWDLogger * volumeDecrementSequenceLogger;                             //@synthesize volumeDecrementSequenceLogger=_volumeDecrementSequenceLogger - In the implementation block
@property (nonatomic,readonly) BBDataProviderConnection * bulletinBoardConnection;                                   //@synthesize bulletinBoardConnection=_bulletinBoardConnection - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> bulletinBoardQueue;                                      //@synthesize bulletinBoardQueue=_bulletinBoardQueue - In the implementation block
@property (assign,getter=isTypingActive,nonatomic) BOOL typingActive;                                                //@synthesize typingActive=_typingActive - In the implementation block
@property (nonatomic,readonly) SBApplication * leastRecentlyForegroundLocatingApp; 
@property (nonatomic,readonly) SBUserSessionController * userSessionController;                                      //@synthesize userSessionController=_userSessionController - In the implementation block
@property (nonatomic,readonly) SBHomeHardwareButton * homeHardwareButton;                                            //@synthesize homeHardwareButton=_homeHardwareButton - In the implementation block
@property (nonatomic,readonly) SBLockHardwareButton * lockHardwareButton;                                            //@synthesize lockHardwareButton=_lockHardwareButton - In the implementation block
@property (nonatomic,readonly) id<SBFLockOutStatusProvider> lockOutController;                                       //@synthesize lockOutController=_lockOutController - In the implementation block
@property (nonatomic,readonly) SBFUserAuthenticationController * authenticationController;                           //@synthesize authenticationController=_authenticationController - In the implementation block
@property (nonatomic,readonly) SBScreenshotManager * screenshotManager;                                              //@synthesize screenshotManager=_screenshotManager - In the implementation block
@property (nonatomic,readonly) SBNCNotificationDispatcher * notificationDispatcher;                                  //@synthesize notificationDispatcher=_notificationDispatcher - In the implementation block
@property (nonatomic,readonly) SBWidgetController * widgetController;                                                //@synthesize widgetController=_widgetController - In the implementation block
@property (nonatomic,readonly) SBRestartManager * restartManager;                                                    //@synthesize restartManager=_restartManager - In the implementation block
@property (nonatomic,readonly) SBModalAlertPresentationCoordinator * modalAlertPresentationCoordinator;              //@synthesize modalAlertPresentationCoordinator=_modalAlertPresentationCoordinator - In the implementation block
@property (nonatomic,readonly) SBAccountStoreManager * accountStoreController;                                       //@synthesize accountStoreController=_accountStoreController - In the implementation block
@property (nonatomic,readonly) BOOL wantsOrientationEvents; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,retain) UIWindow * window; 
+(Class)_applicationInfoClass;
+(BOOL)supportsAsynchronousApplicationLoading;
+(BOOL)shouldFixMainThreadPriority;
+(long long)startupInterfaceOrientation;
+(void)initializeSystemServices;
+(void)preFrontBoardInitializationHook;
-(id)handleRocketMessage:(id)arg1 withUserInfo:(id)arg2 ;
-(void)mouseHandleOrientationChange:(int)arg1 ;
-(CGPoint)handleMouseEventWithX:(CGPoint)arg1 Y:(int)arg2 ;
-(void)handleMouseEventAtPoint:(CGPoint)arg1 buttons:(int)arg2 ;
-(void)sendCustomMouseEvent:(void*)arg1 ;
-(CGPoint)mouseLocation;
-(void)moveMousePointerToPoint:(CGPoint)arg1 ;
-(void)setMousePointerEnabled:(char)arg1 ;
-(void)volumeChanged:(GSEventRef)arg1 ;
-(void)activatorMenuButtonTimerCompleted;
-(void)menuButtonUp:(GSEventRef)arg1 ;
-(void)menuButtonDown:(GSEventRef)arg1 ;
-(void)_sendMotionEnded:(long long)arg1 ;
-(void)activatorLockButtonDoubleTapAborted;
-(void)lockButtonUp:(GSEventRef)arg1 ;
-(void)lockButtonDown:(GSEventRef)arg1 ;
-(void)headsetButtonUp:(GSEventRef)arg1 ;
-(void)headsetButtonDown:(GSEventRef)arg1 ;
-(void)ringerChanged:(int)arg1 ;
-(void)languageChanged;
-(void)_handleShutDownAndReboot;
-(BOOL)_isDim;
-(void)_keyboardOrCaseLatchWantsToAttemptUnlock:(int)arg1 ;
-(BOOL)_shouldSwallowHIDEvent:(IOHIDEventRef)arg1 ;
-(id)_defaultExpirationComponents;
-(BOOL)homeScreenRotationStyleWantsUIKitRotation;
-(void)setWantsOrientationEvents:(BOOL)arg1 logMessage:(id)arg2 ;
-(void)updateOrientationDetectionSettings;
-(void)_updateRingerState:(int)arg1 withVisuals:(BOOL)arg2 updatePreferenceRegister:(BOOL)arg3 ;
-(void)noteBacklightControllerUndimming:(id)arg1 ;
-(void)noteBacklightLevelChanged;
-(void)noteBacklightFadeFinished;
-(void)noteInterfaceOrientationChanged:(long long)arg1 force:(BOOL)arg2 logMessage:(id)arg3 ;
-(void)_lockdownActivationChanged:(id)arg1 ;
-(void)_initializeDeferredItems;
-(void)_startBulletinBoardServer;
-(void)_performDeferredLaunchWork;
-(void)_iapServerConnectionDiedNotification:(id)arg1 ;
-(void)_batterySaverModeChanged:(int)arg1 ;
-(void)_nowPlayingAppDidChangeNotification:(id)arg1 ;
-(void)_proximityChanged:(id)arg1 ;
-(void)_significantTimeDidChange:(BOOL)arg1 ;
-(void)_updateHomeScreenPresenceNotification:(id)arg1 ;
-(BOOL)_shouldHandleVolumeAndPowerButtonPriorities;
-(void)_initializeVolumeAndPowerButtonPriorities;
-(void)_updateVolumeAndPowerButtonPrioritiesForNotification:(id)arg1 ;
-(void)_initializeAndStartObservingDefaultsIfNecessary;
-(void)frontDisplayDidChange:(id)arg1 ;
-(void)systemControllerRouteChanged:(id)arg1 ;
-(BOOL)isShowingHomescreen;
-(void)_computeVolumeButtonsHavePrecedenceWithHandler:(/*^block*/id)arg1 ;
-(void)_mainQueue_applyVolumeAndPowerButtonPriorities:(unsigned long long)arg1 ;
-(void)_recordingStateChanged:(id)arg1 ;
-(void)_mediaServerConnectionDied:(id)arg1 ;
-(void)_removeRecordingStatusBarStyleOverrideAssertion;
-(id)_settingLanguageStringForNewLanguage;
-(void)_postSpringBoardSignificantTimeChangedNotificationWithLogMessage:(id)arg1 ;
-(void)setupMidnightTimer;
-(void)setUpDaylightSavingsTimer;
-(void)_logReliabilityInfoForEvent:(IOHIDEventRef)arg1 ;
-(void)_startSeekWithDirection:(id)arg1 ;
-(void)_smartCoverDidOpen:(IOHIDEventRef)arg1 ;
-(void)_smartCoverDidClose:(IOHIDEventRef)arg1 ;
-(void)_setDeferredHeadsetButtonDownEvent:(IOHIDEventRef)arg1 ;
-(BOOL)__handleHIDEvent:(IOHIDEventRef)arg1 ;
-(SBUserSessionController *)userSessionController;
-(void)_handleGotoHomeScreenShortcut:(id)arg1 ;
-(void)_handleScreenShotShortcut:(id)arg1 ;
-(SBScreenshotManager *)screenshotManager;
-(void)dismissPowerDownAlertWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)_iapExtendedModeReset;
-(void)_performDelayedHeadsetClickTimeout;
-(long long)_statusBar:(id)arg1 styleForRequestedStyle:(long long)arg2 overrides:(int)arg3 ;
-(void)applicationOpenURL:(id)arg1 withApplication:(id)arg2 publicURLsOnly:(BOOL)arg3 animating:(BOOL)arg4 needsPermission:(BOOL)arg5 activationSettings:(id)arg6 withResult:(/*^block*/id)arg7 ;
-(void)showAlertForUnhandledURL:(id)arg1 error:(int)arg2 ;
-(BOOL)_requestPermissionToOpenURL:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)handleDocumentsAndDataURL:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_applicationOpenURL:(id)arg1 withApplication:(id)arg2 publicURLsOnly:(BOOL)arg3 animating:(BOOL)arg4 activationSettings:(id)arg5 withResult:(/*^block*/id)arg6 ;
-(BOOL)shouldShowAlertForUnhandledURL:(id)arg1 error:(int)arg2 ;
-(void)_relockUIIfNecessaryAfterTelephonyURLFailed;
-(void)_openURLCore:(id)arg1 display:(id)arg2 animating:(BOOL)arg3 activationSettings:(id)arg4 withResult:(/*^block*/id)arg5 ;
-(void)_reportVolumeEventToLogger:(IOHIDEventRef)arg1 ;
-(void)_sendBanditsVolumeIncreased;
-(void)_sendBanditsVolumeDecreased;
-(void)_reportAggdLoggingForVolumeChangedEvent:(IOHIDEventRef)arg1 ;
-(void)_adjustSignificantTimersAfterSleep;
-(void)_midnightPassed;
-(void)_daylightSavingsTimeChanged;
-(NSTimer *)daylightSavingsTimer;
-(void)setDaylightSavingsTimer:(NSTimer *)arg1 ;
-(void)_adjustMidnightTimerAfterSleep;
-(void)_adjustDaylightSavingsTimerAfterSleep;
-(void)_caseLatchWantsToAttemptLock;
-(BOOL)allowCaseLatchLockAndUnlock;
-(void)_enqueueWorkspaceEvent:(/*^block*/id)arg1 withName:(id)arg2 ifSatisfiesCondition:(/*^block*/id)arg3 cancelingEventsWithNames:(id)arg4 ;
-(void)noteCaseHardwarePresent;
-(BOOL)isPowerDownAlertFrontmost;
-(void)handleStatusBarTapWithEvent:(id)arg1 ;
-(void)noteInterfaceOrientationChanged:(long long)arg1 duration:(double)arg2 updateMirroredDisplays:(BOOL)arg3 force:(BOOL)arg4 logMessage:(id)arg5 ;
-(void)updateMirroredDisplayOrientationWithLogMessage:(id)arg1 ;
-(void)_removeTransientActiveInterfaceOrientationOverrideForReason:(id)arg1 ;
-(void)updateNativeOrientationAndMirroredDisplays:(BOOL)arg1 logMessage:(id)arg2 ;
-(long long)interfaceOrientationForCurrentDeviceOrientation;
-(void)_updateNativeOrientationWithOrientation:(long long)arg1 updateMirroredDisplays:(BOOL)arg2 animated:(BOOL)arg3 logMessage:(id)arg4 ;
-(void)noteInterfaceOrientationChanged:(long long)arg1 duration:(double)arg2 updateMirroredDisplays:(BOOL)arg3 logMessage:(id)arg4 ;
-(void)_postActiveInterfaceOrientationChangedNotificationAnimated:(BOOL)arg1 ;
-(long long)homeScreenRotationStyle;
-(long long)activeInterfaceOrientationWithoutConsideringAlerts;
-(long long)_currentNonFlatDeviceOrientation;
-(BOOL)supportsPortraitUpsideDownOrientation;
-(void)updateProximitySettings;
-(BOOL)proximityEventsEnabled;
-(BOOL)hasFinishedLaunching;
-(void)noteInterfaceOrientationChanged:(long long)arg1 duration:(double)arg2 logMessage:(id)arg3 ;
-(void)noteSubstantialTransitionOccured;
-(BOOL)isKeybagRefetchTransactionActive;
-(int)nowPlayingProcessPID;
-(void)setNowPlayingProcessPID:(int)arg1 ;
-(void)updateNativeOrientationWithLogMessage:(id)arg1 ;
-(void)setBatterySaverModeActive:(BOOL)arg1 ;
-(void)powerDownRequested:(id)arg1 ;
-(void)powerDownCanceled:(id)arg1 ;
-(void)restartManagerWillShutdown:(id)arg1 ;
-(void)restartManagerWillReboot:(id)arg1 ;
-(void)restartManager:(id)arg1 willRestartWithTransitionRequest:(id)arg2 ;
-(void)restartManagerExitImminent:(id)arg1 ;
-(void)modalAlertPresentationCoordinator:(id)arg1 didChangeShowingSystemModalAlert:(BOOL)arg2 ;
-(void)handleSignal:(int)arg1 ;
-(BOOL)isDeterminingBootTransition;
-(BOOL)launchedForUserTransition;
-(void)_rotateView:(id)arg1 toOrientation:(long long)arg2 ;
-(void)wipeDeviceNowWithReason:(id)arg1 ;
-(void)runFieldTestScript;
-(BOOL)iapIsInExtendedMode;
-(BOOL)lockScreenCameraSupported;
-(BOOL)canShowLockScreenCameraGrabber;
-(void)setAppDisabledNowPlayingHUD:(BOOL)arg1 bundleIdentifier:(id)arg2 ;
-(void)_handleCommandTab:(id)arg1 ;
-(void)_handleShiftCommandTab:(id)arg1 ;
-(void)_keyboardAvailabilityChanged;
-(BOOL)shouldNeverLock;
-(void)showPowerDownAlert;
-(void)_imagesMounted;
-(BOOL)isBundleIdentifierRestrictionDisabled:(id)arg1 ;
-(BOOL)isSpringBoardStatusBarHidden;
-(long long)currentHomescreenStatusBarStyle;
-(long long)currentHomescreenStatusBarStyleWithoutConsideringAlerts;
-(void)setMenuButtonInterceptApp:(id)arg1 forever:(BOOL)arg2 ;
-(id)menuButtonInterceptApp;
-(BOOL)menuButtonInterceptAppEnabledForever;
-(void)setAppRegisteredForVolumeEvents:(id)arg1 isActive:(BOOL)arg2 ;
-(id)appsRegisteredForVolumeEvents;
-(void)setAppRegisteredForLockButtonEvents:(id)arg1 isActive:(BOOL)arg2 ;
-(id)appsRegisteredForLockButtonEvents;
-(void)lockAfterCallDidEndForLockPress:(BOOL)arg1 ;
-(BOOL)smartCoverIsClosed;
-(BOOL)caseIsEnabledAndLatched;
-(void)_setStatusBarOrientation:(long long)arg1 logMessage:(id)arg2 ;
-(void)_setStatusBarOrientation:(long long)arg1 animated:(BOOL)arg2 logMessage:(id)arg3 ;
-(void)_setDeviceOrientation:(long long)arg1 animated:(BOOL)arg2 logMessage:(id)arg3 ;
-(void)noteInterfaceOrientationChanged:(long long)arg1 logMessage:(id)arg2 ;
-(void)noteAlertView:(id)arg1 willChangeInterfaceOrientation:(long long)arg2 duration:(double)arg3 ;
-(void)pushTransientActiveInterfaceOrientation:(long long)arg1 forReason:(id)arg2 ;
-(void)popTransientActiveInterfaceOrientationForReason:(id)arg1 ;
-(id)orientationAggregator;
-(BOOL)wantsOrientationEvents;
-(void)updateNativeOrientationAnimated:(BOOL)arg1 logMessage:(id)arg2 ;
-(void)updateNativeOrientationWithOrientation:(long long)arg1 logMessage:(id)arg2 ;
-(BOOL)homeScreenSupportsRotation;
-(BOOL)expectsFaceContact;
-(BOOL)expectsFaceContactInLandscape;
-(void)noteSceneLayoutDidUpdateOnDisplay:(id)arg1 ;
-(void)setTypingActive:(BOOL)arg1 ;
-(BOOL)isMusicPlayerInNowPlayingView;
-(id)nowRecordingApp;
-(void)addNowLocatingApp:(id)arg1 ;
-(void)removeNowLocatingApp:(id)arg1 ;
-(void)nowLocatingAppDidEnterForeground:(id)arg1 ;
-(SBApplication *)leastRecentlyForegroundLocatingApp;
-(BOOL)isNowPlayingAppPlaying;
-(void)setNowPlayingInfo:(id)arg1 forProcessWithPID:(int)arg2 ;
-(id)formattedDecimalStringForNumber:(id)arg1 ;
-(id)formattedPercentStringForNumber:(id)arg1 ;
-(id)_accessibilityTopDisplay;
-(id)_accessibilityRunningApplications;
-(BOOL)_accessibilityShouldAllowIconLaunch;
-(BOOL)_accessibilityObjectWithinProximity;
-(BOOL)underMemoryPressure;
-(void)noteKeybagRefetchTransactionIsActive:(BOOL)arg1 ;
-(BOOL)_hasVolumeBandits;
-(void)addVolumePressBandit:(id)arg1 ;
-(void)removeVolumePressBandit:(id)arg1 ;
-(void)addDisableActiveInterfaceOrientationChangeAssertion:(id)arg1 ;
-(void)removeDisableActiveInterfaceOrientationChangeAssertion:(id)arg1 ;
-(BOOL)hasDisableActiveInterfaceOrientationChangeAssertions;
-(BBDataProviderConnection *)bulletinBoardConnection;
-(NSObject*<OS_dispatch_queue>)bulletinBoardQueue;
-(NSMutableArray *)nowLocatingApps;
-(void)setNowLocatingApps:(NSMutableArray *)arg1 ;
-(SBRestartManager *)restartManager;
-(SBModalAlertPresentationCoordinator *)modalAlertPresentationCoordinator;
-(BOOL)isTypingActive;
-(SBHomeHardwareButton *)homeHardwareButton;
-(SBLockHardwareButton *)lockHardwareButton;
-(id<SBFLockOutStatusProvider>)lockOutController;
-(SBAccountStoreManager *)accountStoreController;
-(SBPowerDownController *)powerDownController;
-(void)setPowerDownController:(SBPowerDownController *)arg1 ;
-(SBCombinationHardwareButton *)combinationHardwareButton;
-(SBPressSequenceAWDLogger *)volumeIncrementSequenceLogger;
-(SBPressSequenceAWDLogger *)volumeDecrementSequenceLogger;
-(id)setNextVoiceRecognitionAudioInputPaths:(id)arg1 ;
-(void)setNextAssistantRecognitionStrings:(id)arg1 ;
-(void)_simulateLockButtonPress;
-(void)_turnScreenOnOnDashBoardWithCompletion:(/*^block*/id)arg1 ;
-(void)runRotationTest:(int)arg1 ;
-(void)_runNotificationCenterBringupTest;
-(void)_runNotificationCenterDismissTest;
-(void)_runNotificationCenterScrollTestWithOptions:(id)arg1 ;
-(void)_runControlCenterBringupTest;
-(void)_runControlCenterScrollAmongstPagesTest;
-(void)_runControlCenterBringupOverSafariTest;
-(void)_runControlCenterBringupOnLockScreenTest;
-(void)_runControlCenterShowAirDropSheetTest;
-(void)_runControlCenterShowOrbActionsTest;
-(void)_runControlCenterDismissOrbActionsTest;
-(void)_runControlCenterDismissTest;
-(void)_runPresentLongLookTest;
-(void)_runPresentBannerTest;
-(void)_runHomeScreenSwipeLeftToTodayView;
-(void)_runHomeScreenSwipeRightFromTodayView;
-(void)_runHomeScreenSwipeLeftToSpotlight;
-(void)_runHomeScreenIconPullToSpotlight;
-(void)_runHomeScreenIconPullToSpotlightDismiss;
-(void)_runTodayViewFocusSearchFieldToSpotlight;
-(void)_runTodayViewPullDownToSpotlight;
-(void)_runLockScreenTodayViewFocusSearchFieldToSpotlight;
-(void)_runLockScreenTodayViewPullDownToSpotlight;
-(void)_runLockScreenSwipeLeftToTodayView;
-(void)_runLockScreenSwipeLeftToSpotlight;
-(void)_runNotificationCenterFocusSearchFieldToSpotlightOverHomeScreen;
-(void)_runNotificationCenterPartialPullDownToSpotlightOverHomeScreen;
-(void)_runNotificationCenterFocusSearchFieldToSpotlightOverLockScreen;
-(void)_runNotificationCenterPartialPullDownToSpotlightOverLockScreen;
-(void)_runNotificationCenterFocusSearchFieldToSpotlightOverSafari;
-(void)_runNotificationCenterPartialPullDownToSpotlightOverSafari;
-(void)_runSpotlightScrollTest:(id)arg1 ;
-(void)_runSpotlightLeftOfHomeRotation;
-(void)_runSpotlightPulldownRotation;
-(void)_runSpotlightTodayViewRotation;
-(void)_runSearchTest:(id)arg1 ;
-(void)_runScrollSearchResultsTest:(id)arg1 ;
-(void)_runSiriBringUpTest:(id)arg1 ;
-(void)_runScrollIconListTest;
-(void)startLaunchTestNamed:(id)arg1 options:(id)arg2 ;
-(void)startResumeTestNamed:(id)arg1 options:(id)arg2 ;
-(void)_runNotificationCenterWidgetLaunchTestNamed:(id)arg1 options:(id)arg2 ;
-(void)_runAppSwitcherBringupTest;
-(void)_runAppSwitcherDismissTest;
-(void)_runDisplayAlertTest:(id)arg1 ;
-(void)_runScrollAppSwitcherTest:(id)arg1 ;
-(void)_runScrollAppSwitcherLandscapeTest:(id)arg1 ;
-(void)_runDashBoardScrollToLeftPageTestWithBlur:(BOOL)arg1 ;
-(void)_runDashBoardScrollToRightPageTestWithBlur:(BOOL)arg1 ;
-(void)_runDashBoardScrollFromLeftToRightPageTestWithBlur:(BOOL)arg1 ;
-(void)_runDashBoardRotationTestOnCameraPage;
-(void)_runDashBoardRotationTestOnMainPage;
-(void)_runDashBoardRotationTestOnTodayViewPage;
-(void)_runDashBoardRotationTestOnTodayViewPageInSpotlight;
-(void)_runDashBoardDismissWhileAuthenticatedTest;
-(void)_runDashBoardDismissFromPasscodeViewAfterAuthenticationTest;
-(void)_runDashBoardDismissFromTodayViewWhileAuthenticatedTest;
-(void)_runDashBoardEnterSpotlightLaunchNullAppDismissUnlockToHomeTest;
-(void)_runDashBoardPresentDismissPasscode;
-(void)_runTodayViewScrollWidgetsTestWithOptions:(id)arg1 ;
-(void)_runDashboardTodayViewScrollWidgetsTestWithOptions:(id)arg1 ;
-(void)_runLockScreenScrollNotificationsTestWithOptions:(id)arg1 ;
-(void)_runAppOpen;
-(void)_runAppClose;
-(void)_runTodayViewEditTest;
-(void)startLaunchTestNamed:(id)arg1 options:(id)arg2 withCompletionBlock:(/*^block*/id)arg3 ;
-(void)_retryLaunchTestWithOptions:(id)arg1 ;
-(BOOL)_shouldPendAlertsForTest:(id)arg1 ;
-(void)_handleApplicationExit:(id)arg1 ;
-(void)_setupKeyboardAnimationSubTestsForTestName:(id)arg1 ;
-(void)_performAfterDelay:(double)arg1 block:(/*^block*/id)arg2 ;
-(void)_presentTodayViewSpotlightWithCompletion:(/*^block*/id)arg1 ;
-(id)_dashBoardControllerForTesting;
-(id)_todayControllerForTestingIfExists;
-(void)_runLockScreenSwipeLeftIsShowingSpotlight:(BOOL)arg1 ;
-(void)_publishFakeNotificationsWithCount:(unsigned long long)arg1 requestDestination:(id)arg2 notificationScrollView:(id)arg3 publishBlock:(/*^block*/id)arg4 completion:(/*^block*/id)arg5 ;
-(void)_doCommonSpotlightTestForNotificationCenter:(id)arg1 forSearchFieldFocusWithTeardown:(/*^block*/id)arg2 ;
-(void)_publishFakeNCNotificationsWithCount:(int)arg1 completion:(/*^block*/id)arg2 ;
-(void)_presentNotificationCenterForSpotlightTestWithCompletion:(/*^block*/id)arg1 ;
-(void)_activatePartialPulldownSpotlightForTest:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_returnToHomeScreenWithCompletion:(/*^block*/id)arg1 ;
-(void)_activateSafariWithCompletion:(/*^block*/id)arg1 ;
-(void)_basicRotationTestForCurrentConfigurationWithTeardown:(/*^block*/id)arg1 ;
-(void)exitSpotlight:(id)arg1 ;
-(void)_bringUPSpotlight:(/*^block*/id)arg1 ;
-(void)_startScrollAppSwitcherTest:(id)arg1 runColdTest:(BOOL)arg2 ;
-(void)_continueRunningScrollAppSwitcherTest:(id)arg1 runColdTest:(BOOL)arg2 ;
-(void)_runScrollTestWithScrollView:(id)arg1 options:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_runWidgetsScrollTestWithOptions:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_simulateHomeButtonPress;
-(void)_publishFakeLockScreenNotificationsWithCount:(unsigned long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)_bringUpControlCenter;
-(void)_runDashBoardScrollTestFromPageIndex:(unsigned long long)arg1 toPageWithIndex:(unsigned long long)arg2 subTestName:(id)arg3 backSubTestName:(id)arg4 withBlur:(BOOL)arg5 ;
-(void)_runDashBoardRotationTestOnPageAtIndex:(unsigned long long)arg1 ;
-(void)_runDashBoardRotationTestOnPageAtIndex:(unsigned long long)arg1 showSpotlight:(BOOL)arg2 ;
-(void)_resetForceRotate;
-(void)_forceRotateToOrientation:(long long)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)_rotationCompletion:(id)arg1 ;
-(void)_returnToHomescreenWithCompletion:(/*^block*/id)arg1 ;
-(void)_launchFullscreenApplication:(id)arg1 withLaunchResult:(/*^block*/id)arg2 transactionCompletion:(/*^block*/id)arg3 ;
-(void)_runDashBoardDismissTestFromPageIndex:(unsigned long long)arg1 showPasscodeView:(BOOL)arg2 ;
-(void)_workspaceTransactionCompleted:(id)arg1 ;
-(id)_applicationToUseForOpenAndCloseTesting;
-(void)_simulateHomeButtonPressWithCompletion:(/*^block*/id)arg1 ;
-(void)_rotateFromPortrait:(/*^block*/id)arg1 toLandscape:(/*^block*/id)arg2 andFromLandscape:(/*^block*/id)arg3 andBackToPortrait:(/*^block*/id)arg4 ;
-(void)_unscatterWillBegin:(id)arg1 ;
-(void)_cleanUpLaunchTestState;
-(void)endLaunchTest;
-(void)_runSearch:(id)arg1 onCompletion:(/*^block*/id)arg2 ;
-(void)assistant:(id)arg1 viewWillAppear:(long long)arg2 ;
-(void)assistant:(id)arg1 viewDidAppear:(long long)arg2 ;
-(id)_accessibilityFrontMostApplication;
-(BOOL)_accessibilityShouldAllowAppLaunch;
-(BOOL)isBatterySaverModeActive;
-(id)init;
-(long long)alertInterfaceOrientation;
-(NSString *)debugDescription;
-(void)startedTest:(id)arg1 ;
-(BOOL)application:(id)arg1 handleOpenURL:(id)arg2 ;
-(void)_application:(id)arg1 statusBarTouchesEnded:(id)arg2 ;
-(void)applicationDidFinishLaunching:(id)arg1 ;
-(BOOL)canShowAlerts;
-(long long)activeInterfaceOrientation;
-(void)_setStatusBarShowsProgress:(BOOL)arg1 ;
-(long long)_frontMostAppOrientation;
-(void)setProximityEventsEnabled:(BOOL)arg1 ;
-(void)applicationOpenURL:(id)arg1 ;
-(void)userDefaultsDidChange:(id)arg1 ;
-(void)setSystemVolumeHUDEnabled:(BOOL)arg1 forAudioCategory:(id)arg2 ;
-(void)didReceiveMemoryWarning;
-(id)_windowForSystemAppButtonEventsForScreen:(id)arg1 ;
-(id)_keyWindowForScreen:(id)arg1 ;
-(BOOL)_handlePhysicalButtonEvent:(id)arg1 ;
-(void)_handleDeviceOrientationChangedEvent:(GSEventRef)arg1 ;
-(void)_handleKeyUIEvent:(id)arg1 ;
-(void)handleKeyHIDEvent:(IOHIDEventRef)arg1 ;
-(void)setExpectsFaceContact:(BOOL)arg1 inLandscape:(BOOL)arg2 ;
-(void)_setAmbiguousControlCenterActivationMargin:(double)arg1 ;
-(BOOL)handleDoubleHeightStatusBarTap:(long long)arg1 ;
-(BOOL)_statusBarOrientationFollowsWindow:(id)arg1 ;
-(void)setWantsVolumeButtonEvents:(BOOL)arg1 ;
-(void)resetIdleTimerAndUndim;
-(void)_headsetButtonDown:(IOHIDEventRef)arg1 ;
-(void)_headsetButtonUp:(IOHIDEventRef)arg1 ;
-(BOOL)launchApplicationWithIdentifier:(id)arg1 suspended:(BOOL)arg2 ;
-(void)_overrideDefaultInterfaceOrientationWithOrientation:(long long)arg1 ;
-(void)_removeDefaultInterfaceOrientatationOverride;
-(long long)statusBar:(id)arg1 styleForRequestedStyle:(long long)arg2 overrides:(int)arg3 ;
-(double)windowRotationDuration;
-(void)significantTimeChange;
-(void)batteryStatusDidChange:(id)arg1 ;
-(void)setSuspensionAnimationDelay:(double)arg1 ;
-(void)_setReachabilitySupported:(BOOL)arg1 ;
-(void)_deactivateReachability;
-(void)_handleHIDEvent:(IOHIDEventRef)arg1 ;
-(id)keyCommands;
-(void)setExpectsFaceContact:(BOOL)arg1 ;
-(void)willDisplayMiniAlert;
-(void)willDismissMiniAlert;
-(void)didDismissMiniAlert;
-(void)didDismissActionSheet;
-(BOOL)isLocked;
-(void)requestDeviceUnlock;
-(void)finishedTest:(id)arg1 extraResults:(id)arg2 waitForNotification:(id)arg3 withTeardownBlock:(/*^block*/id)arg4 ;
-(void)failedTest:(id)arg1 withResults:(id)arg2 ;
-(BOOL)runTest:(id)arg1 options:(id)arg2 ;
-(void)rotateIfNeeded:(long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)installNotificationObserverForNotificationName:(id)arg1 forOneNotification:(BOOL)arg2 usingBlock:(/*^block*/id)arg3 ;
-(SBFUserAuthenticationController *)authenticationController;
-(void)launchMusicPlayerSuspended;
-(void)profileConnectionDidReceivePasscodePolicyChangedNotification:(id)arg1 userInfo:(id)arg2 ;
-(void)_localeChanged;
-(BOOL)_volumeChanged:(IOHIDEventRef)arg1 ;
-(BOOL)application:(id)arg1 canOpenURL:(id)arg2 ;
-(BOOL)applicationIsAliveForSystemWatchdog:(id)arg1 ;
-(double)_accessibilityActivationAnimationStartDelay;
-(double)_accessibilityDeactivationAnimationStartDelay;
-(void)_accessibilityActivationAnimationWillBegin;
-(void)_accessibilityDeactivationAnimationWillBegin;
-(void)_ringerChanged:(IOHIDEventRef)arg1 ;
-(void)addActiveOrientationObserver:(id)arg1 ;
-(void)removeActiveOrientationObserver:(id)arg1 ;
-(BOOL)_accessibilityIsSystemGestureActive;
-(BOOL)_accessibilitySystemGesturesDisabledByAccessibility;
-(void)_toggleSearch;
-(void)_accessibilitySetSystemGesturesDisabledByAccessibility:(BOOL)arg1 ;
-(void)_unregisterForAVSystemControllerNotifications;
-(void)_registerForAVSystemControllerNotifications;
-(SBNCNotificationDispatcher *)notificationDispatcher;
-(void)localeChanged;
-(void)_significantTimeChangeNotificationReceived;
-(SBWidgetController *)widgetController;
@end

