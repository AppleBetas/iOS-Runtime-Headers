/*
* This header is generated by classdump-dyld 1.0
* on Sunday, February 5, 2017 at 4:20:38 PM Eastern Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /System/Library/CoreServices/SpringBoard.app/SpringBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SpringBoard/SpringBoard-Structs.h>
#import <libobjc.A.dylib/BSDescriptionProviding.h>
#import <SpringBoard/SBLockScreenViewControllerDelegate.h>
#import <SpringBoard/SBPasscodeEntryAlertViewControllerDelegate.h>
#import <SpringBoard/SBAlertObserver.h>
#import <libobjc.A.dylib/SBFPrivateAuthenticationObserver.h>
#import <SpringBoard/SBDashBoardViewControllerDelegate.h>
#import <SpringBoard/SBWallpaperColorProvider.h>
#import <SpringBoard/SBLockScreenMesaCoordinatorDelegate.h>
#import <SpringBoard/SBHomeButtonShowPasscodeRecognizerDelegate.h>
#import <SpringBoard/SBWallpaperObserver.h>

@protocol SBHomeButtonShowPasscodeRecognizer, SBFLockOutStatusProvider;
@class SBLockScreenMesaCoordinator, SBLockScreenViewControllerBase, SBLockScreenUnlockRequest, SBPasscodeEntryAlertViewController, SBFAuthenticationAssertion, SBLockScreenDisabledAssertionManager, SBLockScreenAutoUnlockAggregateRule, SBFUserAuthenticationController, SBLiftToWakeManager, NSMutableDictionary, SBDashBoardViewController, NSString;

@interface SBLockScreenManager : NSObject <BSDescriptionProviding, SBLockScreenViewControllerDelegate, SBPasscodeEntryAlertViewControllerDelegate, SBAlertObserver, SBFPrivateAuthenticationObserver, SBDashBoardViewControllerDelegate, SBWallpaperColorProvider, SBLockScreenMesaCoordinatorDelegate, SBHomeButtonShowPasscodeRecognizerDelegate, SBWallpaperObserver> {

	SBLockScreenMesaCoordinator* _mesaCoordinator;
	SBLockScreenViewControllerBase* _lockScreenViewController;
	id<SBHomeButtonShowPasscodeRecognizer> _homeButtonShowPasscodeRecognizer;
	BOOL _allowDisablePasscodeLockAssertion;
	BOOL _allowUILockUnlock;
	BOOL _isScreenOn;
	BOOL _isUILocked;
	BOOL _isWaitingToLockUI;
	SBLockScreenUnlockRequest* _unlockRequest;
	BOOL _uiHasBeenLockedOnce;
	BOOL _uiUnlocking;
	SBPasscodeEntryAlertViewController* _passcodeEntryController;
	SBFAuthenticationAssertion* _sustainAuthenticationWhileUIUnlockedAssertion;
	SBLockScreenDisabledAssertionManager* _lockScreenDisabledAssertionManager;
	BOOL _isInLostMode;
	SBLockScreenAutoUnlockAggregateRule* _autoUnlockRuleAggregator;
	BOOL _useDashBoard;
	BOOL _shouldTransitionIrisWallpaperToStillWhenPlaybackFinishes;
	id<SBFLockOutStatusProvider> _lockOutController;
	SBFUserAuthenticationController* _userAuthController;
	SBLiftToWakeManager* _liftToWakeManager;
	NSMutableDictionary* _mesaCoordinatorDisabledAssertions;
	NSMutableDictionary* _mesaWalletPreArmDisabledAssertions;
	NSMutableDictionary* _mesaAutoUnlockingDisabledAssertions;
	NSMutableDictionary* _mesaUnlockingDisabledAssertions;
	/*^block*/id _unlockActionBlock;

}

@property (assign,getter=isUIUnlocking,nonatomic) BOOL UIUnlocking;                                                                                       //@synthesize uiUnlocking=_uiUnlocking - In the implementation block
@property (setter=_setLockOutController:,getter=_lockOutController,nonatomic,retain) id<SBFLockOutStatusProvider> lockOutController;                      //@synthesize lockOutController=_lockOutController - In the implementation block
@property (setter=_setUserAuthController:,getter=_userAuthController,nonatomic,retain) SBFUserAuthenticationController * userAuthController;              //@synthesize userAuthController=_userAuthController - In the implementation block
@property (setter=_setLiftToWakeManager:,getter=_liftToWakeManager,nonatomic,retain) SBLiftToWakeManager * liftToWakeManager;                             //@synthesize liftToWakeManager=_liftToWakeManager - In the implementation block
@property (nonatomic,copy) id unlockActionBlock;                                                                                                          //@synthesize unlockActionBlock=_unlockActionBlock - In the implementation block
@property (nonatomic,readonly) SBLockScreenViewControllerBase * lockScreenViewController;                                                                 //@synthesize lockScreenViewController=_lockScreenViewController - In the implementation block
@property (nonatomic,readonly) SBDashBoardViewController * dashBoardViewController; 
@property (nonatomic,readonly) id<SBAlertingNotificationDestination> notificationDestination; 
@property (readonly) BOOL isUILocked;                                                                                                                     //@synthesize isUILocked=_isUILocked - In the implementation block
@property (readonly) BOOL isWaitingToLockUI;                                                                                                              //@synthesize isWaitingToLockUI=_isWaitingToLockUI - In the implementation block
@property (readonly) BOOL shouldHandlePocketStateChanges; 
@property (readonly) BOOL shouldPlayLockSound; 
@property (readonly) BOOL isLockScreenActive; 
@property (readonly) BOOL isLockScreenVisible; 
@property (readonly) BOOL bioAuthenticatedWhileMenuButtonDown; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(Class)safeCategoryBaseClass;
+(id)_sharedInstanceCreateIfNeeded:(BOOL)arg1 ;
+(id)sharedInstance;
+(id)sharedInstanceIfExists;
-(SBLockScreenViewControllerBase *)lockScreenViewController;
-(BOOL)hasUIEverBeenLocked;
-(BOOL)isUILocked;
-(BOOL)isInLostMode;
-(void)_noteStartupTransitionWillBegin;
-(void)_noteStartupTransitionDidBegin;
-(BOOL)isUIUnlocking;
-(BOOL)unlockUIFromSource:(int)arg1 withOptions:(id)arg2 ;
-(BOOL)shouldPlayLockSound;
-(id)_lockOutController;
-(void)wallpaperDidChangeForVariant:(long long)arg1 ;
-(void)setPasscodeVisible:(BOOL)arg1 animated:(BOOL)arg2 ;
-(BOOL)handleTransitionRequest:(id)arg1 ;
-(void)attemptUnlockWithPasscode:(id)arg1 ;
-(BOOL)_attemptUnlockWithPasscode:(id)arg1 finishUIUnlock:(BOOL)arg2 ;
-(BOOL)shouldLockUIAfterEndingCall;
-(void)alertDidDeactivate:(id)arg1 ;
-(void)remoteLock:(BOOL)arg1 ;
-(void)_setMesaUnlockingDisabled:(BOOL)arg1 forReason:(id)arg2 ;
-(void)enableLostModePlugin;
-(void)_setLockOutController:(id)arg1 ;
-(void)dashBoardViewController:(id)arg1 requestsTouchIDDisabled:(BOOL)arg2 forReason:(id)arg3 ;
-(void)dashBoardViewController:(id)arg1 unlockWithRequest:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)dashBoardViewControllerIrisPlayingDidFinish:(id)arg1 ;
-(id<SBAlertingNotificationDestination>)notificationDestination;
-(BOOL)isLockScreenDisabledForAssertion;
-(BOOL)isLockScreenActive;
-(void)addLockScreenDisableAssertion:(id)arg1 ;
-(void)removeLockScreenDisableAssertion:(id)arg1 ;
-(void)noteMenuButtonSinglePress;
-(void)noteMenuButtonDoublePress;
-(void)updateSpringBoardStatusBarForLockScreenTeardown;
-(void)_handleBacklightLevelChanged:(id)arg1 ;
-(void)homeButtonShowPasscodeRecognizerDidFailToRecognize:(id)arg1 ;
-(void)homeButtonShowPasscodeRecognizerRequestsPasscodeUIToBeShown:(id)arg1 ;
-(void)setBiometricAutoUnlockingDisabled:(BOOL)arg1 forReason:(id)arg2 ;
-(BOOL)mesaCoordinator:(id)arg1 requestsAuthenticationFeedback:(id)arg2 ;
-(BOOL)mesaCoordinator:(id)arg1 requestsUnlockWithIntent:(int)arg2 ;
-(BOOL)bioAuthenticatedWhileMenuButtonDown;
-(void)_setupModeChanged;
-(void)lockUIFromSource:(int)arg1 withOptions:(id)arg2 completion:(/*^block*/id)arg3 ;
-(BOOL)passcodeEntryAlertViewController:(id)arg1 authenticatePasscode:(id)arg2 ;
-(void)passcodeEntryAlertViewControllerWantsEmergencyCall:(id)arg1 ;
-(BOOL)isPasscodeEntryAlertVisible;
-(BOOL)isLockScreenVisible;
-(BOOL)isWaitingToLockUI;
-(BOOL)shouldHandlePocketStateChanges;
-(void)_handleBacklightFadeEnded;
-(void)_prepareWallpaperForLockedMode;
-(void)_prepareWallpaperForUnlockedMode;
-(void)startUIUnlockFromSource:(int)arg1 withOptions:(id)arg2 ;
-(void)attemptUnlockWithMesa;
-(id)_userAuthController;
-(void)_setUserAuthController:(id)arg1 ;
-(id)_newLockScreenController;
-(void)_reallySetUILocked:(BOOL)arg1 ;
-(void)activationChanged:(id)arg1 ;
-(void)_lockUI;
-(void)_handleExternalUIUnlock:(id)arg1 ;
-(void)_deviceBlockedChanged:(id)arg1 ;
-(void)_resetOrRestoreStateChanged:(id)arg1 ;
-(void)_lockScreenDimmed:(id)arg1 ;
-(void)_frontmostDisplayChanged:(id)arg1 ;
-(void)_callCountChanged;
-(void)_evaluatePreArmDisabledAssertions;
-(BOOL)_shouldLockAfterEndingTelephonyCall;
-(BOOL)_shouldLockAfterEndingFaceTimeCall;
-(void)_activateLockScreenAnimated:(BOOL)arg1 animationProvider:(/*^block*/id)arg2 automatically:(BOOL)arg3 inScreenOffMode:(BOOL)arg4 dimInAnimation:(BOOL)arg5 dismissNotificationCenter:(BOOL)arg6 completion:(/*^block*/id)arg7 ;
-(void)_relockUIForButtonPress:(BOOL)arg1 afterCall:(BOOL)arg2 ;
-(void)_setWalletPreArmDisabled:(BOOL)arg1 forReason:(id)arg2 ;
-(BOOL)_attemptUnlockWithPasscode:(id)arg1 mesa:(BOOL)arg2 finishUIUnlock:(BOOL)arg3 ;
-(BOOL)_isPasscodeVisible;
-(void)_handleAuthenticationFeedback:(id)arg1 ;
-(BOOL)_setPasscodeVisible:(BOOL)arg1 animated:(BOOL)arg2 ;
-(void)_setHomeButtonShowPasscodeRecognizer:(id)arg1 ;
-(void)_performLockScreenAlertActivationTransitionAnimated:(BOOL)arg1 dimInAnimation:(BOOL)arg2 animationProvider:(/*^block*/id)arg3 completion:(/*^block*/id)arg4 ;
-(void)_postLockCompletedNotification:(BOOL)arg1 ;
-(void)_setMesaCoordinatorDisabled:(BOOL)arg1 forReason:(id)arg2 ;
-(void)_clearAuthenticationLockAssertion;
-(void)_createAuthenticationAssertion;
-(void)_setUILocked:(BOOL)arg1 ;
-(void)_sendUILockStateChangedNotification;
-(BOOL)_isUnlockDisabled;
-(BOOL)_finishUIUnlockFromSource:(int)arg1 withOptions:(id)arg2 ;
-(void)setUIUnlocking:(BOOL)arg1 ;
-(void)_runUnlockActionBlock:(BOOL)arg1 ;
-(void)_performLockScreenAlertDeactivationTransition;
-(BOOL)_canAttemptRealUIUnlockIgnoringBacklightNonsenseWithReason:(out id*)arg1 ;
-(void)_lockFeaturesForRemoteLock:(BOOL)arg1 ;
-(void)exitLostModeIfNecessaryFromRemoteRequest:(BOOL)arg1 ;
-(void)_maybeLaunchSetupForcingCheckIfNotBricked:(BOOL)arg1 ;
-(BOOL)_shouldUnlockUIOnKeyDownEvent;
-(id)averageColorForCurrentWallpaperInScreenRect:(CGRect)arg1 ;
-(void)activateLostModeForRemoteLock:(BOOL)arg1 ;
-(BOOL)_shouldBeInSetupMode;
-(id)_liftToWakeManager;
-(void)_setLiftToWakeManager:(id)arg1 ;
-(id)unlockActionBlock;
-(void)setUnlockActionBlock:(id)arg1 ;
-(id)init;
-(NSString *)description;
-(BOOL)handleKeyHIDEvent:(IOHIDEventRef)arg1 ;
-(void)extendedKeybagLockStateChanged:(BOOL)arg1 ;
-(id)descriptionWithMultilinePrefix:(id)arg1 ;
-(id)succinctDescription;
-(id)succinctDescriptionBuilder;
-(id)descriptionBuilderWithMultilinePrefix:(id)arg1 ;
-(BOOL)unlockWithRequest:(id)arg1 completion:(/*^block*/id)arg2 ;
-(SBDashBoardViewController *)dashBoardViewController;
-(void)lockUIFromSource:(int)arg1 withOptions:(id)arg2 ;
-(void)_authenticationStateChanged:(id)arg1 ;
@end

