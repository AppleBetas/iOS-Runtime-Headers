/*
* This header is generated by classdump-dyld 1.0
* on Saturday, February 25, 2017 at 6:58:59 AM Eastern Standard Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /usr/sbin/BTServer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <BTServer/BTServer-Structs.h>
@class TUCallCenter;

@interface Communicator : NSObject {

	Delegate* _delegate;
	TUCallCenter* _tuCallCenter;
	CTServerConnectionRef _ctServerConnection;
	CallList* _calls;

}

@property (assign,nonatomic) Delegate* delegate;                                      //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain,readonly) TUCallCenter * tuCallCenter;                    //@synthesize tuCallCenter=_tuCallCenter - In the implementation block
@property (nonatomic,readonly) CTServerConnectionRef ctServerConnection;              //@synthesize ctServerConnection=_ctServerConnection - In the implementation block
@property (assign,nonatomic) CallList calls;                                          //@synthesize calls=_calls - In the implementation block
+(id)_myNumber:(CTServerConnectionRef)arg1 ;
+(id)myNumber;
-(void)_handleTUCallCenterCallStatusChangedNotification:(id)arg1 ;
-(void)_updateCalls;
-(void)_handleCTSignalStrengthChangedNotification:(CFDictionaryRef)arg1 ;
-(void)_handleCTCellularTransmitStateChangedNotification:(CFDictionaryRef)arg1 ;
-(void)_handleCTOperatorNameChangedNotification;
-(void)_handleCTNetworkSelectionChangedNotification;
-(void)_handleCTRegistrationStatusChangedNotification;
-(void)_handleCTCallCapabilitiesChangedNotification;
-(TUCallCenter *)tuCallCenter;
-(UUID)_identifierForCall:(id)arg1 ;
-(BOOL)_appearsToBeEmailAddress:(id)arg1 ;
-(int)_answerCall:(id)arg1 uid:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg2 behavior:(long long)arg3 ;
-(id)_callForIdentifier:(const UUID*)arg1 ;
-(int)_dialNumber:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg1 uid:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg2 providerIdentifier:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg3 ;
-(BOOL)supports3WC;
-(BOOL)shouldSuppressCallNotifications:(basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)arg1 ;
-(int)answerIncomingCall:(basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)arg1 ;
-(int)rejectIncomingCall;
-(int)hangupActiveCall;
-(int)releaseHeldCalls;
-(int)releaseActiveCalls:(basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)arg1 ;
-(int)holdActiveCalls:(basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)arg1 ;
-(int)addHeldCall;
-(int)releaseCall:(const UUID*)arg1 ;
-(int)privateConference:(const UUID*)arg1 ;
-(int)dialNumber:(const PhoneNumber*)arg1 uid:(basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)arg2 ;
-(int)dialMemoryIndex:(unsigned short)arg1 ;
-(int)redialLastNumberWithUid:(basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)arg1 ;
-(int)sendDTMFTone:(unsigned char)arg1 ;
-(int)enableEchoCancellationNoiseReduction:(BOOL)arg1 ;
-(int)addVirtualCall;
-(int)removeVirtualCall;
-(int)getCurrentCalls:(CallList*)arg1 ;
-(int)getOperatorStatus:(OperatorStatus*)arg1 ;
-(int)getRegistrationStatus:(RegistrationStatus*)arg1 ;
-(int)getSignalStrength:(int*)arg1 mode:(int)arg2 ;
-(int)getSubscriberNumber:(PhoneNumber*)arg1 ;
-(int)getMobileSubscriberIdentity:(basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg1 ;
-(int)getMobileEquipmentIdentity:(basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg1 ;
-(int)getCountryCode:(basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg1 ;
-(int)getTransmitState:(BOOL*)arg1 ;
-(void)setDelegate:(Delegate*)arg1 ;
-(void)dealloc;
-(Delegate*)delegate;
-(void)invalidate;
-(id)initWithDelegate:(Delegate*)arg1 ;
-(void)setCalls:(CallList)arg1 ;
-(id)_myNumber;
-(CallList)calls;
-(CTServerConnectionRef)ctServerConnection;
@end

