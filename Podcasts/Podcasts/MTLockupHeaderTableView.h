/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, April 18, 2017 at 7:56:21 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /Applications/Podcasts.app/Podcasts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Podcasts/Podcasts-Structs.h>
#import <Podcasts/MTTableView.h>
#import <Podcasts/MTTableViewRowDataDelegate.h>

@protocol MTLockupHeaderViewProtocol;
@class UIView, NSString;

@interface MTLockupHeaderTableView : MTTableView <MTTableViewRowDataDelegate> {

	BOOL _needsToUpdateLayout;
	BOOL _forcePinned;
	BOOL _forceTucked;
	CGPoint _forcedContentOffset;
	BOOL _alwaysPinnedToTop;
	BOOL _lockupViewShouldPin;
	BOOL _headerPinned;
	double _heightForLockupViewPinning;
	UIView*<MTLockupHeaderViewProtocol> _lockupHeaderView;
	UIView* _tuckingHeaderView;
	double _navBarMaxY;

}

@property (assign,nonatomic,__weak) id<MTLockupHeaderTableViewDelegate> delegate; 
@property (nonatomic,retain) UIView*<MTLockupHeaderViewProtocol> lockupHeaderView;              //@synthesize lockupHeaderView=_lockupHeaderView - In the implementation block
@property (nonatomic,retain) UIView * tuckingHeaderView;                                        //@synthesize tuckingHeaderView=_tuckingHeaderView - In the implementation block
@property (assign,nonatomic) BOOL alwaysPinnedToTop;                                            //@synthesize alwaysPinnedToTop=_alwaysPinnedToTop - In the implementation block
@property (assign,nonatomic) BOOL lockupViewShouldPin;                                          //@synthesize lockupViewShouldPin=_lockupViewShouldPin - In the implementation block
@property (assign,nonatomic) double heightForLockupViewPinning;                                 //@synthesize heightForLockupViewPinning=_heightForLockupViewPinning - In the implementation block
@property (assign,getter=isTuckingEnabled,nonatomic) BOOL tuckingEnabled; 
@property (getter=isHeaderPinned,nonatomic,readonly) BOOL headerPinned;                         //@synthesize headerPinned=_headerPinned - In the implementation block
@property (nonatomic,readonly) double navBarMaxY;                                               //@synthesize navBarMaxY=_navBarMaxY - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(double)heightForLockupViewPinning;
-(void)setPinsHeaderToTop:(BOOL)arg1 animated:(BOOL)arg2 ;
-(void)setPinnableHeaderView:(id)arg1 ;
-(void)setPinsHeaderToTop:(BOOL)arg1 ;
-(void)setNeedsToUpdateLayout;
-(void)_clearForcedFlags;
-(CGPoint)contentOffsetForTuckingHeaderTucked;
-(CGPoint)contentOffsetForTuckingHeaderVisible;
-(CGPoint)contentOffsetForPinningHeaderPinned;
-(void)updateNavBarMaxY;
-(void)updateLayoutForCurrentContentOffset;
-(UIView *)tuckingHeaderView;
-(UIView*<MTLockupHeaderViewProtocol>)lockupHeaderView;
-(double)navBarHeight;
-(BOOL)lockupViewShouldPin;
-(void)setHeightForLockupViewPinning:(double)arg1 ;
-(void)setTuckingEnabled:(BOOL)arg1 ;
-(void)reorderHeadersIfNeeded;
-(void)_reorderHeaders;
-(double)tabBarHeight;
-(BOOL)isTuckingEnabled;
-(void)scrollHeaderTuckedAnimated:(BOOL)arg1 ;
-(void)setHeaderPinned:(BOOL)arg1 ;
-(void)setNavBarMaxY:(double)arg1 ;
-(double)navBarMaxY;
-(BOOL)_needsToReorderHeader;
-(CGRect)adjustedVisibleRect:(CGRect)arg1 forFloatingSectionHeaderInTableView:(id)arg2 heightCanBeGuessed:(BOOL)arg3 ;
-(void)scrollHeaderVisibleAnimated:(BOOL)arg1 ;
-(void)scrollHeaderPinnedAnimated:(BOOL)arg1 ;
-(void)setContentOffsetForced:(CGPoint)arg1 ;
-(void)setLockupViewShouldPin:(BOOL)arg1 ;
-(void)setAlwaysPinnedToTop:(BOOL)arg1 ;
-(void)setLockupHeaderView:(UIView*<MTLockupHeaderViewProtocol>)arg1 ;
-(void)setTuckingHeaderView:(UIView *)arg1 ;
-(BOOL)alwaysPinnedToTop;
-(BOOL)isHeaderPinned;
-(void)setFrame:(CGRect)arg1 ;
-(void)layoutSubviews;
-(void)setBounds:(CGRect)arg1 ;
-(void)traitCollectionDidChange:(id)arg1 ;
-(BOOL)gestureRecognizerShouldBegin:(id)arg1 ;
-(void)scrollRectToVisible:(CGRect)arg1 animated:(BOOL)arg2 ;
-(void)setContentOffset:(CGPoint)arg1 ;
-(void)_notifyDidScroll;
-(void)_updateVisibleHeadersAndFootersNow:(BOOL)arg1 ;
-(void)scrollToRowAtIndexPath:(id)arg1 atScrollPosition:(long long)arg2 animated:(BOOL)arg3 ;
-(void)updateLayout;
@end

